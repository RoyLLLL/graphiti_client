聊天内容回写 Graphiti

每轮对话结束后（用户发送消息、助手回复后），需要将新的对话内容上传到 Graphiti，使图谱记忆得以更新。具体做法是在对话流程的最后添加一个“更新记忆”节点，调用客户端的 upload_conversation 方法
medium.com
。例如：

def update_memory_node(state):
    user_id = state.user_id
    # 从状态中获取最新一轮对话（只保存用户内容或全部）
    # 这里假设 state.messages 是 [{"role": "user", "content": ...}, {"role": "assistant", ...}, ...]
    messages = state.messages
    # 只取用户消息作为记忆录入
    user_texts = [msg["content"] for msg in messages if msg["role"] == "user"]
    # 将最新用户消息文本拼接为字符串
    if user_texts:
        new_text = "\n".join(user_texts[-1:])  # 取最后一次用户说话
        graphiti_client.upload_conversation(new_text, user_id)
    return state

# 添加更新记忆节点
graph.add_node(
    name="UpdateUserMemory",
    func=update_memory_node,
    inputs=["*", "*"],  # 保证在所有生成完成后执行
    outputs=["*"]
)


该节点会把最新的用户对话内容写入 Graphiti。根据需要，可同时调用 /extract 提取事实，再用 /add_episode 存储完整文本
medium.com
。这样，Graphiti 图谱将逐步累积用户历史信息，用于后续查询和个性化。
